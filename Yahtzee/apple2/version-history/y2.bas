10  TEXT : NORMAL : HOME 
15 SCCOUNT = 13
20  DIM PS(SCCOUNT): REM PLAYER SCORE
21  DIM DESC$(SCCOUNT): REM DESCRIPTION OF ROW SCORE
30  DIM CS(SCCOUNT): REM COMPUTER SCORE
31  DIM SR(SCCOUNT): REM SCORING RUBRIC
32  DIM SS(6): REM SCORING SUM FOR THE SIX FACES - USED BY SCORER (LINE 10000)
33 NOM$ = "BORK": REM  FOR THOSE WHO COME AFTER
34 TN = 1: REM  TURN NUMBER
35 TC = 3: REM  TURN COUNT
36 RN = 1: REM  ROUND NUMBER
37 RC = 13: REM  ROUND COUNT
38  DIM DICE(4): REM DICE
39  DIM KEEPIES(4): REM DICE TO KEEP FOR NEXT TURN 
40 NS =  - 1: REM CONSTANT FOR 'NO SCORE'
41  DIM DS(SCCOUNT): REM SCORES FOR CURRENT DICE FACES
42 DC = 4: REM DICE COUNT
100  GOSUB 11000: REM  DATA AND INITIALIZATION
110  FOR I = 0 TO 4
120  READ DICE(I)
130  NEXT 
140  GOSUB 8000: REM ROLL
150  GOSUB 10000: REM  SCORING
160  GOSUB 7000: REM DEBUG SCREEN
164  PRINT 
165  PRINT "SPACE TO RE-ROLL"
170  GET XX$
180  IF XX$ <  > " " THEN  END 
190  HOME : GOTO 140
950  END 
998  REM  ====================
999  REM  SCORING. TAKES DICE IN DICE() AND FILLS IN SCORING SHEET IN DS()
6998  REM  ====================
6999  REM  DEBUG OUTPUT
7000  PRINT "DEBUG INFO(E)"
7005  PRINT "    PLAYER ";NOM$
7010  FOR I = 0 TO SCCOUNT
7019  REM  SCORE NAME, PLAYER, COMPUTER SCORE, RUBRIC, AND CURRENT FACE SCORE
7020  PRINT "  ";DESC$(I),PS(I);" ";CS(I);" ";SR(I);"  ";DS(I)
7030  NEXT 
7040  PRINT "ROUND ";RN;" OF ";RC;"  -  TURN ";TN;" OF ";TC
7050  PRINT "DICE ";: FOR I = 0 TO 4: PRINT DICE(I);" ";: NEXT 
7055  PRINT 
7060  PRINT "KEEP ";: FOR I = 0 TO 4: PRINT KEEPIES(I);" ";: NEXT 
7998  REM ====================
7999  REM ROLL DICE, HONORING KEEPIES
8000  FOR I = 0 TO DC
8010  IF KEEPIES(I) THEN  NEXT 
8020 DR =  INT( RND(1) * 6 + 1)
8030 DICE(I) = DR
8040  NEXT 
8050  RETURN 
10000  FOR I = 0 TO 5:SS(I) = 0: NEXT 
10010  FOR I = 0 TO SCCOUNT:DS(I) = 0: NEXT 
10020 SHANCE = 0
10100  REM  ----- CALCULATE UPPER SECTION AND CHANCE
10110  FOR I = 0 TO DC
10120 D = DICE(I)
10130 SS(D - 1) = SS(D - 1) + 1
10140 SHANCE = SHANCE + D
10150  NEXT : REM DICE 0...4
10698  REM  ----- FILL OUT SCORING ARRAY FROM ACCUMULATED VALUES
10699  REM --- SCORE TOP SECTION AND CHANCE
10700  FOR I = 0 TO 5:DS(I) = SS(I) * (I + 1): NEXT 
10710 DS(12) = SHANCE
10720  REM ---SCORE 3 AND 4 OF A KIND
10750  FOR I = 0 TO 5
10760  IF SS(I) >  = 3 THEN DS(6) = SHANCE: REM 3 OF A KIND
10770  IF SS(I) >  = 4 THEN DS(7) = SHANCE: REM 4 OF A KIND
10775  NEXT 
10778  REM ----FULL HOUSE: 2 OF ONE AND 3 OF ANOTHER
10780 H2 = 0:H3 = 0: REM HAS 2 OR HAS 3 'BOOLS'
10790  FOR I = 0 TO 5
10800  IF SS(I) = 2 THEN H2 = 1
10810  IF SS(I) = 3 THEN H3 = 1
10814  REM BE PEDANTIC AND ACCEPT 5 OF A KIND AS A FULL HOUSE TOO
10815  IF SS(I) = 5 THEN H2 = 1:H3 = 1
10820  NEXT I
10830  IF H2 AND H3 THEN DS(8) = SR(8)
10839  REM  ---SMOL STRAIGHT. LOOK EXHAUSTIVELY
10840 HS = 0: REM  HAS(SMOL) STRAIGHT
10850  IF SS(0) AND SS(1) AND SS(2) AND SS(3) THEN HS = 1
10855  IF  NOT HS AND SS(1) AND SS(2) AND SS(3) AND SS(4) THEN HS = 1
10900  IF  NOT HS AND SS(2) AND SS(3) AND SS(4) AND SS(5) THEN HS = 1
10910  IF HS THEN DS(9) = SR(9)
10920 HS = 0: REM  RESET AND LOOK FOR LORGE STRAIGHT
10930  IF SS(0) AND SS(1) AND SS(2) AND SS(3) AND SS(4) THEN HS = 1
10935  IF  NOT HS AND SS(1) AND SS(2) AND SS(3) AND SS(4) AND SS(5) THEN HS = 1
10940  IF HS THEN DS(10) = SR(10)
10949  REM  LOOK FOR THE BIG CROWSHAW
10950 HY = 0: REM  HAS YAHTZEE
10960  FOR I = 0 TO 5
10965  IF SS(I) = 5 THEN HY = 1
10970  NEXT 
10980  IF HY THEN DS(11) = SR(11)
10990  RETURN 
10998  REM  ====================
10999  REM  DATA AND INITIALIZATION 
11000  FOR I = 0 TO SCCOUNT
11010  READ DESC$(I)
11020  NEXT 
11050  FOR I = 0 TO SCCOUNT
11060  READ SR(I)
11070  NEXT 
11100  FOR I = 0 TO SCCOUNT
11110 PS(I) = NS: REM NO-SCORE-I
11120 CS(I) = NS
11130  NEXT 
11400  RETURN 
11495  REM  ===== SCORING CARD LABELS
11500  DATA    "ACES", "TWOS", "THREES", "FOURS", "FIVES", "SIXES", "3 KIND", "4 KIND", "FULL HOUSE", "SM STR", "LG STR", "YAHTZEE", "CHANCE", "Y BONUS" 
11549  REM  ===== SCORING RUBRIC
11550  DATA  -1,-2,-3,-4,-5,-6 : REM  UPPER
11560  DATA  -10, -10, 25, 30, 40, 50, -10, -20
11610  DATA  1,1,1,1,1